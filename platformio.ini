 ; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:genericSTM32F405RG]
platform = ststm32
board = genericSTM32F405RG
framework = stm32cube
debug_tool = stlink
upload_protocol = stlink

;; ----------------------------
;; comport setting
;; ----------------------------
monitor_speed = 115200
;monitor_filters = time, debug
monitor_filters = time, default
;monitor_port = COM10
;upload_port = COM10

;; dir C:\Users\jinsheng\.platformio

;; Custom linker script
;; to re-size stack(zhan) and heap(dui) size
;; stack is for local-variables(jubu bianliang)
;; heap is for dynamic-memory such as keywords: new, malloc...
board_build.ldscript = STM32F405RGTX_FLASH.ld

;; for M4 FPU
;; hardware floating 
;; multiplying test
;; with    FPU -- 402ms at 24M times, 144MHz; about 2.5MIP per a multiply
;; without FPU -- 7.36s at 24M times, 144MHz; aoubt  44MIP per a multiply
;build_flags = -mthumb -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16
extra_scripts = floating_script.py

;; =======================================================
;; build
;; using arm-none-eabi-gcc compiler
;; dir C:\Users\jinsheng\.platformio\packages\toolchain-gccarmnoneeabi\bin
;; =======================================================
;; 1 type : release (default), debug
;build_type = debug
;; 2 flags : such as FPU flag as above
;build_flags = -Wa,-al
;; 3 verbose to see detail in build
; in powershell: pio run -v [run means build]
;; ---compiler: arm-none-eabi-gcc-------
build_flags = 
    ;; use which compiler
    ;-std=gnu99 ;(default)
    ;; for FPU
    ;-mthumb
    ;-mcpu=cortex-m4
    -mfloat-abi=hard
    -mfpu=fpv4-sp-d16
    ;; for others
    ;;-O2
    -Wno-unknown-pragmas ;; ignore [-unknown-pragmas] warning for #pragma region and #pragma endregion
    ;; for freeRTOS
    ;-D RTOS ; define Macros[RTOS] = 1(default), to build for HAL_InitTick weak function problem with GCC, need add #ifndef RTOS and #endif at stm32f4xx_hal.c line 253 and 267
    ;; for external frequency
    -D HSE_VALUE=8000000U
    ;; make link know sprintf float type
    -Wl,-u_printf_float
    -Wl,-u_scanf_float
    -Wl,-Map,.pio/build/output.map ;; generate .map file, -Wl:tell compiler to pass the params to linker
    ;; for DSP arm_math.h
    -D ARM_MATH_CM4
    -l arm_cortexM4lf_math
  

;; ========================================================
;; DEBUG part
;; should not contain CHINESE dir name if you want to debug 
;;    the code rather than gdbasm
;; ========================================================
;; 1 save asm file
;build_flags = -save-temps -fverbose-asm
;; 2 break insert using code
;debug_init_break = break main.c:32
;; 3 other
;debug_build_flags = -O0 -ggdb3 -g3
;; 4 to see asm.file using debug -> switch to assembly
;;   or arm-none-eabi-objdump.exe may help
;; 5 to see verbose in advance build
;;   click platforin.icon at left bar, then select Project Tasks -> Adavnced -> Verbose Build
;; 6 startup file: when you debug, it will appears
;;   startup file : C:\Users\jinsheng\.platformio\packages\framework-stm32cubef4\Drivers\CMSIS\Device\ST\STM32F4xx\Source\Templates\gcc\startup_stm32f405xx.s
 
